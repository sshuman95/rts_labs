{"version":3,"sources":["App.js","redux/action.js","reportWebVitals.js","redux/reducers/search.js","index.js"],"names":["Results","props","empty","data","hits","length","map","d","title","objectID","story_title","PastSearches","terms","term","i","App","useState","searchTerm","setSearch","apiData","setApiData","pastTerms","useSelector","state","dispatch","useDispatch","className","onChange","e","target","value","type","placeholder","onClick","preventDefault","temp","fetch","then","res","json","payload","catch","err","console","error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","intialState","action","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gOAOMA,EAAU,SAACC,GACd,IAAIC,EAAQ,kDACZ,OAAOD,EAAME,KAAKC,KAAKC,QAAU,EAAIH,EAAQD,EAAME,KAAKC,KAAKE,KAAI,SAAAC,GAC9D,OAAGA,EAAEC,MAED,4BAAqBD,EAAEC,OAAfD,EAAEE,UAIV,4BAAqBF,EAAEG,aAAfH,EAAEE,cAOdE,EAAe,SAACV,GACpB,OAAOA,EAAMW,MAAMN,KAAI,SAACO,EAAKC,GAC3B,OAAO,4BAAYD,GAAJC,OAyDJC,EArDH,WAAO,IAAD,EACgBC,mBAAS,IADzB,mBACTC,EADS,KACGC,EADH,OAEcF,mBAAS,IAFvB,mBAETG,EAFS,KAEAC,EAFA,KAGVC,EAAYC,aAAa,SAAAC,GAAK,OAAIA,EAAMX,SACxCY,EAAWC,cA4BjB,OACE,sBAAKC,UAAU,MAAf,UACI,yDACA,iCACI,uBAAOC,SA5BI,SAACC,GACpBV,EAAUU,EAAEC,OAAOC,QA2BoBC,KAAK,OAAOC,YAAY,gBACvD,uBAAOD,KAAK,SAASE,QAzBV,SAACL,GAEpB,GADAA,EAAEM,iBACCjB,EAAW,CACV,IAAIkB,EAAOlB,EACXmB,MAAM,8CAAD,OAA+CnB,IACnDoB,MAAK,SAAAC,GACJ,OAAOA,EAAIC,UAEZF,MAAK,SAAAE,GACJnB,EAAWmB,GACXf,EClDC,CACLO,KAAM,WACNS,QDgDqBL,OAElBM,OAAM,SAAAC,GACLC,QAAQC,MAAMF,aAchB,0BAAShB,UAAU,gBAAnB,UACE,sBAAKA,UAAU,mBAAf,UACE,yCACCP,EAAQd,QAAU,EAAG,2DAAkC,cAAC,EAAD,CAASF,KAAMgB,OAEzE,gCACE,uDACCE,EAAUhB,QAAU,EAAI,qDAA8B,cAAC,EAAD,CAAcO,MAAOS,cE/DzEwB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBV,MAAK,YAAkD,IAA/CW,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,uBCPRO,EAAc,CAChBzC,MAAM,IAiBKA,EAZD,WAAkC,IAAjCW,EAAgC,uDAAxB8B,EAAaC,EAAW,uCAC3C,OAAOA,EAAOvB,MACZ,IAAK,WACH,OAAO,2BACAR,GADP,IAEIX,MAAM,GAAD,mBAAKW,EAAMX,OAAX,CAAkB0C,EAAOd,YAEpC,QACE,OAAOjB,ICJXgC,EAAQC,YAAY5C,EAAM6C,OAAOC,8BAAgCD,OAAOC,gCAG5EC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUN,MAAOA,EAAjB,SACE,cAAC,EAAD,QAGJO,SAASC,eAAe,SAI1BlB,M","file":"static/js/main.f27463ee.chunk.js","sourcesContent":["\nimport { useState } from \"react\";\nimport './App.css';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { addTerm } from \"./redux/action\";\n\n\nconst Results = (props) =>{\n   let empty = <h1>No Results Found</h1>;\n   return props.data.hits.length <= 0 ? empty : props.data.hits.map(d=>{\n      if(d.title){\n        return (\n          <p key={d.objectID}>{d.title}</p>\n        )\n      } else {\n       return (\n          <p key={d.objectID}>{d.story_title}</p>\n       )\n      }\n    })\n}\n\n\nconst PastSearches = (props) => {\n  return props.terms.map((term,i)=>{\n    return <p key={i}>{term}</p>\n  })\n}\n\nconst App = () => {\n  const [searchTerm, setSearch] = useState(\"\");\n  const [apiData, setApiData] = useState([]);\n  const pastTerms = useSelector( state => state.terms )\n  const dispatch = useDispatch();\n\n\n\n  const handleChange = (e) => {\n    setSearch(e.target.value);\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if(searchTerm){\n        let temp = searchTerm;\n        fetch(`https://hn.algolia.com/api/v1/search?query=${searchTerm}`)\n        .then(res=>{\n          return res.json()\n        })\n        .then(json=>{\n          setApiData(json);\n          dispatch(addTerm(temp));\n        })\n        .catch(err=>{\n          console.error(err)\n        })\n    }\n  }\n\n\n\n  return (\n    <div className=\"App\">\n        <h1>Hacker News Algolia API</h1>\n        <form>\n            <input onChange={handleChange} type=\"text\" placeholder=\"Search Term\"/>\n            <input type=\"submit\" onClick={handleSubmit}/>\n        </form>\n        <section className=\"searchResults\">\n          <div className=\"resultsContainer\">\n            <h1>Results</h1>\n            {apiData.length <= 0 ?<p>Please enter a search term</p>:<Results data={apiData}/>}\n          </div> \n          <div>\n            <h1>Your past seach terms</h1>\n            {pastTerms.length <= 0 ? <p>No Searches Recorded</p> : <PastSearches terms={pastTerms}/>}\n          </div> \n        </section>\n    </div>\n  );\n}\n\nexport default App;\n","export const addTerm = (term) => {\r\n    return {\r\n      type: \"ADD_TERM\",\r\n      payload:term\r\n    }\r\n  }","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const intialState = {\r\n    terms:[]\r\n}\r\n\r\n\r\n\r\nconst terms = (state = intialState, action) => {\r\n    switch(action.type){\r\n      case \"ADD_TERM\":\r\n        return {\r\n            ...state,\r\n            terms:[...state.terms, action.payload]\r\n        }\r\n      default:\r\n        return state;\r\n  }\r\n}\r\n\r\nexport default terms;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { createStore } from \"redux\";\nimport { Provider } from 'react-redux';\nimport terms from \"./redux/reducers/search\";\n\n\nlet store = createStore(terms,window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\nreportWebVitals();\n"],"sourceRoot":""}